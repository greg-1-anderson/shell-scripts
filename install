#!/bin/bash

#
# Install some useful projects (including this one)
#
# Usage:
#
#     source install-useful
#

# Get the path to the directory this script was ran from
SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

[ -n "$HISTORYRECALL" ]           || export HISTORYRECALL="$HOME/Code/personal/history-recall"
[ -n "$FINDDIRECTORY" ]           || export FINDDIRECTORY="$HOME/Code/personal/fd"
[ -n "$GITBASHRC" ]               || export GITBASHRC="$HOME/Code/personal/git-bashrc"

# .bash_profile is including .bashrc, then we will install to .bashrc.
INSTALL_TO=".bash_profile"
if [ ! -f "$INSTALL_TO" ] || grep -q bashrc "$HOME/$INSTALL_TO" ; then
  INSTALL_TO=".bashrc"
fi

# Parse options
while [ $# -gt 0 ] ; do
  option=$1
  shift

  case "$option" in
    --no-history-recall )
      export HISTORYRECALL=""
      ;;

    --no-fd )
      export FINDDIRECTORY=""
      ;;

    --no-git-bashrc )
      export GITBASHRC=""
      ;;

    --bashrc )
      INSTALL_TO=".bashrc"
      ;;

    --bash_profile )
      INSTALL_TO=".bash_profile"
      ;;

    --profile )
      INSTALL_TO=".profile"
      ;;
  esac
done


#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
#  G E T   H I S T O R Y   R E C A L L
#
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

echo "# Check history-recall..."

if [ -n "$HISTORYRECALL" ] && [ ! -d "$HISTORYRECALL" ] ; then
  (
    mkdir -p "$(dirname "$HISTORYRECALL")"
    cd "$(dirname "$HISTORYRECALL")"
    git clone https://github.com/g1a/history-recall.git
    cd "$HISTORYRECALL"
    source history-install.sh
  )
fi

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
#  G E T   F D   A N D   C D D
#
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

echo "# Check fd..."

if [ -n "$FINDDIRECTORY" ] && [ ! -d "$FINDDIRECTORY" ] ; then
  (
    mkdir -p "$(dirname "$FINDDIRECTORY")"
    cd "$(dirname "$FINDDIRECTORY")"
    git clone https://github.com/g1a/fd.git
    cd "$FINDDIRECTORY"
    source fd-install.sh --with-cdd
  )
fi

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
#  G E T   G I T - B A S H R C
#
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

echo "# Check git-bashrc..."

if [ -n "$GITBASHRC" ] && [ ! -d "$GITBASHRC" ] ; then
  (
    mkdir -p "$(dirname "$GITBASHRC")"
    cd "$(dirname "$GITBASHRC")"
    git clone https://github.com/g1a/git-bashrc.git
    cd "$GITBASHRC"
    source bashrc-install.sh
  )
fi

#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
#
#  I N S T A L L   C U S T O M   B A S H R C
#
#:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

echo "# Check custom-bashrc..."

CUSTOM_BASHRC="$SCRIPT_DIR/custom-bashrc"

# If it looks like the fdrc file is already being sourced, then exit.
if grep -q custom-bashrc "$HOME/$INSTALL_TO" ; then
  echo "custom-bashrc configuration file is already sourced from ~/$INSTALL_TO)"
  return
fi

cat <<- __EOF__ >> "$HOME/$INSTALL_TO"

# Source our custom configuration file from the utiliscripts project.
source "$CUSTOM_BASHRC"
__EOF__

echo "Installed 'source custom-bashrc' in ~/$INSTALL_TO"

# Source history-recall so that it is available in this shell.
source "$CUSTOM_BASHRC"
